@using PasswordManager.Web.Views.Shared

@{
    ViewData["Title"] = "Settings";
}

@Html.AntiForgeryToken()

<div>
    <h2>Common settings</h2>

    @await Html.PartialAsync("/Views/Shared/InputForm.cshtml", new InputFormModel("session-timeout", "text", "Session timeout"))

    <input type="button" value="Update" onclick="updateSessionTimeout()" />
</div>

<div>
    <h2>Master key settings</h2>

    @await Html.PartialAsync("/Views/Shared/InputForm.cshtml", new InputFormModel("master-key-salt", "text", "Salt"))
    @await Html.PartialAsync("/Views/Shared/InputForm.cshtml", new InputFormModel("master-key-iterations", "number", "Iterations"))
    @await Html.PartialAsync("/Views/Shared/InputForm.cshtml", new InputFormModel("new-master-password", "password", "New master password")
{
        NeedShow = true,
        NeedVerify = true
    })
    @await Html.PartialAsync("/Views/Shared/InputForm.cshtml", new InputFormModel("master-password", "password", "Master password")
    {
        NeedShow = true
    })

    <input type="button" value="Update" onclick="updateMasterKeySettings()" />
    <br/>
    <br/>
    <input type="button" value="Delete storage" onclick="deleteStorage()" style="color: red" />
</div>

<script>
    onload = async () => { await getSettings(); };
</script>
